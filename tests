#
# *new, *delete, *rename, *list *exists
#

proc test_newdel {
	songreset

	tracknew mytrack1
	tracknew mytrack2
	tracknew mytrack3
	if [tracklist] != {mytrack1 mytrack2 mytrack3} {
		print [tracklist]
		print "tracknew/tracklist failed"
	}
	trackrename mytrack3 mytrack_newname
	if [tracklist] != {mytrack1 mytrack2 mytrack_newname} {
		print [tracklist]
		print "tracknew/tracklist failed"
	}
	trackdelete mytrack_newname
	if [tracklist] != {mytrack1 mytrack2} {
		print [tracklist]
		print "tracknew/tracklist failed"
	}
	if ![trackexists mytrack1] || \
	   ![trackexists mytrack2] || \
	   [trackexists mytrack_newname] {
   		print "trackexist failed"
	}

	filtnew myfilt1
	filtnew myfilt2
	filtnew myfilt3
	if [filtlist] != {myfilt1 myfilt2 myfilt3} {
		print [filtlist]
		print "filtnew/filtlist failed"
	}
	filtrename myfilt3 myfilt_newname
	if [filtlist] != {myfilt1 myfilt2 myfilt_newname} {
		print [filtlist]
		print "filtnew/filtlist failed"
	}
	filtdelete myfilt_newname
	if [filtlist] != {myfilt1 myfilt2} {
		print [filtlist]
		print "filtnew/filtlist failed"
	}
	if ![filtexists myfilt1] || \
	   ![filtexists myfilt2] || \
	   [filtexists myfilt_newname] {
   		print "filtexist failed"
	}

	channew mychan1 {0 1}
	channew mychan2 {4 2}
	channew mychan3 {8 3}
	if [chanlist] != {mychan1 mychan2 mychan3} {
		print [chanlist]
		print "channew/chanlist failed"
	}
	chanrename mychan3 mychan_newname
	if [chanlist] != {mychan1 mychan2 mychan_newname} {
		print [chanlist]
		print "channew/chanlist failed"
	}
	chandelete mychan_newname
	if [chanlist] != {mychan1 mychan2} {
		print [chanlist]
		print "channew/chanlist failed"
	}
	if ![chanexists mychan1] || \
	   ![chanexists mychan2] || \
	   [chanexists mychan_newname] {
   		print "chanexist failed"
	}

	sysexnew mysysex1
	sysexnew mysysex2
	sysexnew mysysex3
	if [sysexlist] != {mysysex1 mysysex2 mysysex3} {
		print [sysexlist]
		print "sysexnew/sysexlist failed"
	}
	sysexrename mysysex3 mysysex_newname
	if [sysexlist] != {mysysex1 mysysex2 mysysex_newname} {
		print [sysexlist]
		print "sysexnew/sysexlist failed"
	}
	sysexdelete mysysex_newname
	if [sysexlist] != {mysysex1 mysysex2} {
		print [sysexlist]
		print "sysexnew/sysexlist failed"
	}
	if ![sysexexists mysysex1] || \
	   ![sysexexists mysysex2] || \
	   [sysexexists mysysex_newname] {
   		print "sysexexist failed"
	}
	print "test_newdel: ok"
}

# ---------------------------------------------------------------

proc test_songcur {
	songreset
	if [songgetcurtrack] != nil {
		print [songgetcurtrack]
		print "songgetcurtrack(nil) failed"
	}
	tracknew mytrack1
	if [songgetcurtrack] != mytrack1 {
		print [songgetcurtrack]
		print "songgetcurtrack(mytrack1) failed"
	}
	tracknew mytrack2
	if [songgetcurtrack] != mytrack2 {
		print [songgetcurtrack]
		print "songgetcurtrack(mytrack2) failed"
	}
	songsetcurtrack nil
	if [songgetcurtrack] != nil {
		print [songgetcurtrack]
		print "songgetcurtrack(nil)/songsetcurtrack(nil) failed"
	}
	songsetcurtrack mytrack1
	if [songgetcurtrack] != mytrack1 {
		print [songgetcurtrack]
		print "songgetcurtrack(mytrack1)/songsetcurtrack(mytrack1) failed"
	}

	if [songgetcurfilt] != nil {
		print [songgetcurfilt]
		print "songgetcurfilt(nil) failed"
	}
	filtnew myfilt1
	if [songgetcurfilt] != myfilt1 {
		print [songgetcurfilt]
		print "songgetcurfilt(myfilt1) failed"
	}
	filtnew myfilt2
	if [songgetcurfilt] != myfilt2 {
		print [songgetcurfilt]
		print "songgetcurfilt(myfilt2) failed"
	}
	songsetcurfilt nil
	if [songgetcurfilt] != nil {
		print [songgetcurfilt]
		print "songgetcurfilt(nil)/songsetcurfilt(nil) failed"
	}
	songsetcurfilt myfilt1
	if [songgetcurfilt] != myfilt1 {
		print [songgetcurfilt]
		print "songgetcurfilt(myfilt1)/songsetcurfilt(myfilt1) failed"
	}

	if [songgetcurchan] != nil {
		print [songgetcurchan]
		print "songgetcurchan(nil) failed"
	}
	channew mychan1 {0 1}
	if [songgetcurchan] != mychan1 {
		print [songgetcurchan]
		print "songgetcurchan(mychan1) failed"
	}
	channew mychan2 {1 2}
	if [songgetcurchan] != mychan2 {
		print [songgetcurchan]
		print "songgetcurchan(mychan2) failed"
	}
	songsetcurchan nil
	if [songgetcurchan] != nil {
		print [songgetcurchan]
		print "songgetcurchan(nil)/songsetcurchan(nil) failed"
	}
	songsetcurchan mychan1
	if [songgetcurchan] != mychan1 {
		print [songgetcurchan]
		print "songgetcurchan(mychan1)/songsetcurchan(mychan1) failed"
	}

	if [songgetcursysex] != nil {
		print [songgetcursysex]
		print "songgetcursysex(nil) failed"
	}
	sysexnew mysysex1
	if [songgetcursysex] != mysysex1 {
		print [songgetcursysex]
		print "songgetcursysex(mysysex1) failed"
	}
	sysexnew mysysex2
	if [songgetcursysex] != mysysex2 {
		print [songgetcursysex]
		print "songgetcursysex(mysysex2) failed"
	}
	songsetcursysex nil
	if [songgetcursysex] != nil {
		print [songgetcursysex]
		print "songgetcursysex(nil)/songsetcursysex(nil) failed"
	}
	songsetcursysex mysysex1
	if [songgetcursysex] != mysysex1 {
		print [songgetcursysex]
		print "songgetcursysex(mysysex1)/songsetcursysex(mysysex1) failed"
	}
	
	songsetcurinput {12 13}
	if [songgetcurinput] != {12 13} {
		print [songgetcurinput]
		print "songgetcurinput({12 13}) failed"
	}
	songsetcurinput {9 3}
	if [songgetcurinput] != {9 3} {
		print [songgetcurinput]
		print "songgetcurinput({9 3}) failed"
	}
	
	songsetcurtrack mytrack2
	if [songgetcurtrack] != mytrack2 ||		\
	   [songgetcurfilt] != nil ||			\
	   [songgetcurchan] != nil ||			\
	   [songgetcurinput] != {0 0} {
	   	print {	[songgetcurtrack] 		\
			[songgetcurfilt] 		\
			[songgetcurchan] 		\
			[songgetcurinput] 		\
			}
		print "songgetcur*(mytrack2, nil, nil, {0 0}) failed"
	}
	print "test_songcur: ok"
}


proc test_track {
	songreset
	tracknew mytrack
	tracksetmute mytrack 1
	if [trackgetmute mytrack] != 1 {
		print "track{get/set}mute(1) failed";
	}
	tracksetmute mytrack 0
	if [trackgetmute mytrack] != 0 {
		print "track{get/set}mute(1) failed";
	}
	trackaddev mytrack 0 0 0 	{non  {0 0} 60 33}
	trackaddev mytrack 1 1 (96/16) 	{noff {0 0} 60 33}
	trackaddev mytrack 1 0 0 	{non  {0 0} 62 33}
	trackaddev mytrack 2 1 (96/16) 	{noff {0 0} 62 33}
	trackaddev mytrack 2 0 0 	{non  {0 0} 63 33}
	trackaddev mytrack 3 1 (96/16) 	{noff {0 0} 63 33}
	trackcheck mytrack
	if $test_rt { songplay; }
	trackcut   mytrack 0 1 (96/16)
	trackcheck mytrack
	if $test_rt { songplay; }
	trackblank mytrack 1 1 (96/16) {}
	trackcheck mytrack
	if $test_rt { songplay; }
	trackinsert mytrack 0 1 (96/16)
	trackcheck mytrack
	if $test_rt { songplay; }
	trackcopy  mytrack 1 1 mytrack 3 (96/16) {}
	trackcheck mytrack
	if $test_rt { songplay; }
	trackquant mytrack 0 4 (96/16) 70
	trackcheck mytrack
	if $test_rt { songplay; }
	trackinfo mytrack (96/16) {}
	print "test_track: ok"
}

proc test_chan {
	songreset
	channew mychan {9 3}
	if [changetdev mychan] != 9 || [changetch mychan] != 3 {
		print {[changetdev mychan]  [changetch mychan]}
		print "changet{dev,ch}(9, 3) failed"
	}
	chanconfev mychan {ctl mychan 7 4}
	chanconfev mychan {pc mychan  3}
	chanconfev mychan {ctl mychan 32 2}
	chanconfev mychan {ctl mychan 0 1}
	chaninfo mychan
	print "test_chan: ok"
}

proc test_filt {
	songreset
	filtnew myfilt
	if [changetdev mychan] != 9 || [changetch mychan] != 3 {
		print {[changetdev mychan]  [changetch mychan]}
		print "changet{dev,ch}(9, 3) failed"
	}
	chanconfev mychan {ctl mychan 7 4}
	chanconfev mychan {pc mychan  3}
	chanconfev mychan {ctl mychan 32 2}
	chanconfev mychan {ctl mychan 0 1}
	chaninfo mychan
	print "test_chan: ok"
}

# ---------------------------------------------------------------

let test_rt = 0

test_newdel
test_songcur
test_track
test_chan
